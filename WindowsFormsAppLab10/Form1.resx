<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>